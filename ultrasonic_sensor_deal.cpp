/******************************************************************************

  版权所有 (C), 2017-2028 惠州市蓝微电子有限公司

 ******************************************************************************
  文件名称: ultrasonic_sensor_deal.cpp
  版本编号: 初稿
  作     者: Leon
  生成日期: 2017年7月3日
  最近修改:
  功能描述   : 超声波传感器任务处理
  函数列表:
  修改历史:
  1.日     期: 2017年7月3日
    作     者: Leon
    修改内容: 创建文件

******************************************************************************/

/*******************************************************************************
 * 包含头文件                                                                       *
 *******************************************************************************/
#include "ultrasonic_sensor.h"

#include <ros.h>
#include <std_msgs/Float32.h>
//#include <std_msgs/Int16.h>


/*******************************************************************************
 * 外部变量说明                                                                      *
 *******************************************************************************/

/*******************************************************************************
 * 外部函数原型说明                                                                    *
 *******************************************************************************/

/*******************************************************************************
 * 内部函数原型说明                                                                    *
 *******************************************************************************/

/*******************************************************************************
 * 全局变量                                                                        *
 *******************************************************************************/

/*******************************************************************************
 * 模块级变量                                                                       *
 *******************************************************************************/

/*******************************************************************************
 * 常量定义                                                                        *
 *******************************************************************************/

/*******************************************************************************
 * 宏定义                                                                         *
 *******************************************************************************/

ros::NodeHandle g_nh;
std_msgs::Float32 g_distance[2];
ultrasonic_sensor g_object;

#ifdef ENABLE_FRONT_ULTRASONIC_SENSOR
ros::Publisher front_ult_sen_pub("front_ultrasonic_sensor_distance", &g_distance[0]);
#endif

#ifdef ENABLE_BACK_ULTRASONIC_SENSOR
ros::Publisher back_ult_sen_pub("back_ultrasonic_sensor_distance", &g_distance[1]);
#endif

/*****************************************************************************
 函 数 名: init_setup
 功能描述  : 初始化设置超声波传感器使用的引脚
 输入参数: void  
 输出参数: 无
 返 回 值:
 调用函数:
 被调函数:
 
 修改历史:
  1.日     期: 2017年7月3日
    作     者: Leon
    修改内容: 新生成函数

*****************************************************************************/
void init_setup(void)
{
	g_object.initialize();

	g_nh.initNode();
#ifdef ENABLE_FRONT_ULTRASONIC_SENSOR
	g_nh.advertise(front_ult_sen_pub);
#endif

#ifdef ENABLE_BACK_ULTRASONIC_SENSOR
	g_nh.advertise(back_ult_sen_pub);
#endif
}


/*****************************************************************************
 函 数 名: loop_app
 功能描述  : 程序主循环任务执行
 输入参数: void  
 输出参数: 无
 返 回 值:
 调用函数: 
 被调函数: 
 
 修改历史:
  1.日     期: 2017年7月3日
    作     者: Leon
    修改内容: 新生成函数

*****************************************************************************/
void loop_app(void)
{
	bool flag = false;
	float distance = 0;
	static long n = 0;
#ifdef ENABLE_FRONT_ULTRASONIC_SENSOR
	flag = g_object.get_optimization_distance(0, distance);
	if ( flag == true )
	{
		g_distance[0].data = distance;
		front_ult_sen_pub.publish(&g_distance[0]);
	}
	n++;
#endif

#ifdef ENABLE_BACK_ULTRASONIC_SENSOR
	flag = g_object.get_optimization_distance(1, distance);
	if ( flag == true )
	{
		g_distance[1].data = distance;
		back_ult_sen_pub.publish(&g_distance[1]);
	}
#endif

	g_nh.spinOnce();
	delay(100);//单位毫秒
}


